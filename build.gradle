buildscript {
    repositories {
        if (System.getenv('VERIFY_USE_PUBLIC_BINARIES') == 'true') {
            jcenter()
            maven { url "https://dl.bintray.com/alphagov/maven-test" }
            maven { url "https://dl.bintray.com/robfletcher/gradle-plugins" }
        }
        else {
            maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos/' }
        }
    }
    dependencies {
        classpath 'org.gradle.plugins:gradle-compass:1.0.7',
                'uk.gov.ida:ida-gradle:1.1.0-23',
                'com.github.ben-manes:gradle-versions-plugin:0.11.3',
                'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins { id "com.jfrog.bintray" version "1.8.0" }

apply plugin: 'java'
apply plugin: 'idaJar'
apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'org.junit.platform.gradle.plugin'

mainClassName = 'uk.gov.ida.eidas.trustanchor.cli.Application'
def buildVersion = "1.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"
version = "$buildVersion"

ext {
    opensaml = '3.3.0'
}


def dependencyVersions = [
        opensaml:"$opensaml",
        saml_libs_version: "$opensaml-157"
]

repositories {
    if (System.getenv('VERIFY_USE_PUBLIC_BINARIES') == 'true') {
        logger.warn('Production builds MUST NOT be built with public binaries.\nUse artifactory/whitelisted-repos for production builds.\n\n')
        maven { url  'https://dl.bintray.com/alphagov/maven-test' }
        jcenter()
    }
    else {
        maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos/' }
    }
}

dependencies {
    compile 'com.nimbusds:nimbus-jose-jwt:5.4',
            'info.picocli:picocli:2.2.2',
            'org.json:json:20180130',
            'com.google.guava:guava:23.1-jre',

            "org.opensaml:opensaml-core:$dependencyVersions.opensaml",
            "org.opensaml:opensaml-saml-api:$dependencyVersions.opensaml",
            "uk.gov.ida:saml-serializers:$dependencyVersions.saml_libs_version"

    testCompile 'uk.gov.ida:ida-dev-pki:1.1.0-32',
            'org.junit.jupiter:junit-jupiter-api:5.0.0',
            'uk.gov.ida:security-utils:2.0.0-335',
            'org.mockito:mockito-core:2.+',
            'org.assertj:assertj-core:3.9.1'

    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0',
            'org.junit.platform:junit-platform-launcher:1.0.1'
}

task copyToLib(dependsOn: jar, type: Copy) {
    into "$buildDir/output/lib"
    from configurations.runtime
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            url '/srv/maven'
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'uk.gov.ida.eidas'
            artifactId = 'trust-anchor'

            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven-test'
        name = 'verify-eidas-trust-anchor'
        userOrg = 'alphagov'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alphagov/verify-dev-pki.git'
        version {
            name = "$buildVersion"
        }
    }
}

